package org.alfresco.rest.model;

import java.util.List;

import org.alfresco.rest.core.IRestModel;
import org.alfresco.rest.core.assertion.ModelAssertion;
import org.alfresco.utility.model.TestModel;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Generated by 'Kristian.Dimitrov@hyland.com' on '2022-07-13 15:53' from 'Alfresco Content Services REST API' swagger file 
 * Generated from 'Alfresco Content Services REST API' swagger file
 * Base Path {@linkplain /alfresco/api/-default-/public/alfresco/versions/1}
 */
public class RestCompositeConditionDefinitionModel extends TestModel implements IRestModel<RestCompositeConditionDefinitionModel>
{
    @Override
    public ModelAssertion<RestCompositeConditionDefinitionModel> assertThat()
    {
        return new ModelAssertion<RestCompositeConditionDefinitionModel>(this);
    }

    @Override
    public ModelAssertion<RestCompositeConditionDefinitionModel> and()
    {
        return assertThat();
    }

    @JsonProperty(value = "entry")
    RestCompositeConditionDefinitionModel model;

    @Override
    public RestCompositeConditionDefinitionModel onModel()
    {
        return model;
    }

    /**
    Whether to invert the logic for this condition (if true then "not" is applied to the whole condition)
    */	        

    private boolean inverted;	    
    /**
    How to combine the clauses of this condition ("and" or "or")
    */	        

    private String booleanMode;	    
    /**
    Nested list of composite clauses in this condition
    */	        

    private List<RestCompositeConditionDefinitionModel> compositeConditions;	    
    /**
    Nested list of simple (per field) conditions.
    */	        

    private List<RestSimpleConditionDefinitionModel> simpleConditions;	    

    public boolean getInverted()
    {
        return this.inverted;
    }

    public void setInverted(boolean inverted)
    {
        this.inverted = inverted;
    }				

    public String getBooleanMode()
    {
        return this.booleanMode;
    }

    public void setBooleanMode(String booleanMode)
    {
        this.booleanMode = booleanMode;
    }				

    public List<RestCompositeConditionDefinitionModel> getCompositeConditions()
    {
        return this.compositeConditions;
    }

    public void setCompositeConditions(List<RestCompositeConditionDefinitionModel> compositeConditions)
    {
        this.compositeConditions = compositeConditions;
    }				

    public List<RestSimpleConditionDefinitionModel> getSimpleConditions()
    {
        return this.simpleConditions;
    }

    public void setSimpleConditions(List<RestSimpleConditionDefinitionModel> simpleConditions)
    {
        this.simpleConditions = simpleConditions;
    }				
}
 
