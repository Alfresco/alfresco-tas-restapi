package org.alfresco.rest.model;

import java.util.List;

import org.alfresco.rest.core.IRestModel;
import org.alfresco.rest.core.assertion.ModelAssertion;
import org.alfresco.utility.model.TestModel;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Generated by 'Kristian.Dimitrov@hyland.com' on '2022-07-13 15:53' from 'Alfresco Content Services REST API' swagger file 
 * Generated from 'Alfresco Content Services REST API' swagger file
 * Base Path {@linkplain /alfresco/api/-default-/public/alfresco/versions/1}
 */
public class RestSimpleConditionDefinitionModel extends TestModel implements IRestModel<RestSimpleConditionDefinitionModel>
{
    @Override
    public ModelAssertion<RestSimpleConditionDefinitionModel> assertThat()
    {
        return new ModelAssertion<RestSimpleConditionDefinitionModel>(this);
    }

    @Override
    public ModelAssertion<RestSimpleConditionDefinitionModel> and()
    {
        return assertThat();
    }

    @JsonProperty(value = "entry")
    RestSimpleConditionDefinitionModel model;

    @Override
    public RestSimpleConditionDefinitionModel onModel()
    {
        return model;
    }

    /**
    The name of the property to compare.

This should be either a property (e.g. "cm:name") or one of the keywords from this list:
* size (the size of the content for a node)
* mimetype (the mimetype of the content for a node)
* encoding (the encoding of the content for a node)
* category (a category for the node)
* tag (a tag that the node has)
* aspect (an aspect that the node has)

For multi-valued properties the condition is satisfied if any of the values match the condition.

    */	        

    @JsonProperty(required = true)    
    private String field;	    
    /**
    The method to compare the property against the parameter.

Depending on the type of the property then different comparators are available:
* All types: equals
* text: contains, startsWith, endsWith
* int/long/float/double/date: greaterThan, lessThan, greaterThanOrEqual, lessThanOrEqual
* type: instanceOf

Where a property is multivalued then the condition is true if it is satisfied by any of the values.

    */	        

    @JsonProperty(required = true)    
    private String comparator;	    
    /**
    The value to compare the field against
    */	        

    @JsonProperty(required = true)    
    private String parameter;	    

    public String getField()
    {
        return this.field;
    }

    public void setField(String field)
    {
        this.field = field;
    }				

    public String getComparator()
    {
        return this.comparator;
    }

    public void setComparator(String comparator)
    {
        this.comparator = comparator;
    }				

    public String getParameter()
    {
        return this.parameter;
    }

    public void setParameter(String parameter)
    {
        this.parameter = parameter;
    }				
}
 
